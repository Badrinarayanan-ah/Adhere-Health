<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/23/2019 1:27:43 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="P10PMW90PRDP03"
  DTS:CreatorName="PHARMMD\mike.rezvani"
  DTS:DTSID="{05DB2039-4BA7-40F7-AEC8-3815E95588D3}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="1033"
  DTS:ObjectName="TMR_Generating_Excel_Files"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="140"
  DTS:VersionGUID="{65576ADB-58DB-4A9F-A971-872829DD142B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQLETL]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{89DC7626-460C-446C-A9AD-F097E07628BE}"
      DTS:ObjectName="SQLETL">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQLETL;Initial Catalog=Utilities;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQLETL_DEV]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4FB24BB6-36E6-49BD-AE88-2B1CA19AF30E}"
      DTS:ObjectName="SQLETL_DEV">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQLETLDEV02.ad.pharmmd.com\SQLETLY;Initial Catalog=Utilities;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[sqlops]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2A609A89-0367-43A2-AFBE-A7674DCECBFD}"
      DTS:ObjectName="sqlops">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=sqlops;Initial Catalog=CommonCore;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[sqlops_Dev]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{844D4F1B-A848-4469-949F-C99689BE7B93}"
      DTS:ObjectName="sqlops_Dev">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQLOPSDEV03\SQLOPSY;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="&quot;SQLETL&quot;;&quot;[dbo].[SSIS ConfigurationsTMRUpdate_Second_Step]&quot;;&quot;VarialbleMap&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{BEEB4B2D-416A-4E1A-B828-CBF9190353E5}"
      DTS:ObjectName="VariableMap" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7BFBB2C8-C729-46F3-A180-DA024D317053}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Job has started at &quot;+  (DT_STR, 30, 1252)  @[System::StartTime] + &quot; and finished at &quot; +  substring((DT_STR, 30, 1252)  GETDATE(),1,19)+ &quot; successfully for &quot; + @[User::clientname]+ &quot; and file name is &quot;+ @[User::ExcelFullPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="body">
      <DTS:VariableValue
        DTS:DataType="8">Job has started at 5/13/2020 3:23:17 PM and finished at 2020-05-13 15:29:42 successfully for  and file name is </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C14AF6C-4657-416C-975F-E58468EF407D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Job has started at &quot;+  (DT_STR, 30, 1252)  @[System::StartTime] + &quot; and Failed at &quot; +  substring((DT_STR, 30, 1252)  GETDATE(),1,19)+ &quot;  for  &quot; + @[User::clientname]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Body_For_Failed_Job">
      <DTS:VariableValue
        DTS:DataType="8">Job has started at 5/13/2020 3:23:17 PM and Failed at 2020-05-13 15:29:42  for  </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5389538A-FBF3-4698-9775-29104101BCF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="clientname">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCE90F0A-E750-4DDB-ADF4-C2818C1471A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="destination">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\Copy_Of_ExcelFile\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{878A5AC1-7F76-4B2B-BBD3-9258D30538B7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::destination]+  @[User::rightexcelfile]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exceldestination">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\Copy_Of_ExcelFile\.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2B356C1-0C46-4CDB-AC2E-7401B133CF8F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFullPath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78E0B503-85B9-4389-AD79-2FC62EEB134E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::excelpath]+&quot;\\&quot;+ @[User::rightexcelfile]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="excelinput">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F9AB9B69-93C2-491A-8761-F1A6FF850450}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="excelpath">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED4FDD4C-3E1E-49A1-9A8C-0ABE7251753E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;TMR for &quot;+ @[User::clientname]+&quot;Has been Failed&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Failed_subject">
      <DTS:VariableValue
        DTS:DataType="8">TMR for Has been Failed</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61390AB3-2799-45CD-8A3D-2B2D2A0D2D2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="from">
      <DTS:VariableValue
        DTS:DataType="8">mike.rezvani@adherehealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA721CC2-BCDA-44E6-B779-7DAABB6526BB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="overWrite">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BECD2A40-C7E6-4C20-B904-6486C9B38174}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oYear">
      <DTS:VariableValue
        DTS:DataType="3">2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C7F0280-2462-419D-B60D-6B0C05F230B4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pClientid">
      <DTS:VariableValue
        DTS:DataType="3">30</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B70A3418-BA22-4003-A404-9565F29BA602}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PDTPCutoff">
      <DTS:VariableValue
        DTS:DataType="8">03-16-2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8893FDD8-80ED-41FF-AA74-D4423B9AC50F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pLetterDate">
      <DTS:VariableValue
        DTS:DataType="8">04-21-2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1E6ED24-AED0-4459-AC10-315D26CF2605}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pPopulationID">
      <DTS:VariableValue
        DTS:DataType="3">46</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEFB30E1-2983-4802-AA02-6A4E10A63F29}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Quarter">
      <DTS:VariableValue
        DTS:DataType="8">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC9CCE49-3801-4059-9A13-CC7D12AB2A64}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="receipent">
      <DTS:VariableValue
        DTS:DataType="8">mike.rezvani@adherehealth.com;accountManagement@pharmmd.hostpilot.com;ryan.dacus@adherehealth.com; cynthia.sandahl@adherehealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73BF1B55-757D-4FC5-AA44-12C4A9DD3FC2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="recreatesynonyms">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4242357-5603-4C98-80F8-FB8907F25A31}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ExcelFullPath]+&quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="rightexcelfile">
      <DTS:VariableValue
        DTS:DataType="8">.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{274322B5-E906-413A-A903-DF484AA45023}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;TMR Task for &quot;+ @[User::clientname]+&quot; Has been ran Successfully&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="subject">
      <DTS:VariableValue
        DTS:DataType="8">TMR Task for  Has been ran Successfully</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send_Mail_Failed_job"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3D8C26EA-BFAE-4D55-99C8-7DFFA574BC20}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Mail_Failed_job"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{89DC7626-460C-446C-A9AD-F097E07628BE}"
          SQLTask:SqlStatementSource="&#xA;msdb.[dbo].[sp_send_dbmail] @profile_name='SQLETL'&#xA;,@recipients=?,&#xA;@from_address='cynthia.sandahl@adherehealth.com',@subject=?,@body=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::receipent"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Failed_subject"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::Body_For_Failed_Job"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send_Mail_Successful_job"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C7F2C07A-4057-4188-8636-18E02B30400A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Mail_Successful_job"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{89DC7626-460C-446C-A9AD-F097E07628BE}"
          SQLTask:SqlStatementSource="&#xA;msdb.[dbo].[sp_send_dbmail] @profile_name='SQLETL'&#xA;,@recipients='mike.rezvani@adherehealth.com;cynthia.sandahl@adherehealth.com;ryan.dacus@adherehealth.com',&#xA;@from_address='cynthia.sandahl@adherehealth.com',@subject=?,@body=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::subject"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::body"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D9A4AF89-2E25-4671-BB00-0C4A30CE3E41}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Copy Excel File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{421566B0-149D-4C48-AA83-D6D4C4C9850E}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:FailPackageOnFailure="True"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Copy Excel File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskSourcePath="User::excelinput"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::exceldestination"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\getting Client Name"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AC100583-2065-4FE2-83B9-A55A78FE4D3F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="getting Client Name"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\getting Client Name.EventHandlers[OnTaskFailed]"
              DTS:CreationName="OnTaskFailed"
              DTS:DTSID="{E2E9AB47-F024-4459-9570-14BFE64102AB}"
              DTS:EventID="0"
              DTS:EventName="OnTaskFailed"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{9ED32C52-298E-41F8-A72D-048812F13B7A}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A609A89-0367-43A2-AFBE-A7674DCECBFD}"
              SQLTask:SqlStatementSource="&#xA;SELECT case when ?=54 and ?=57 then 'HighmarkMAPD' &#xA;&#x9;&#x9;      when ?=54 and ?=58 then 'HighmarkPDP'&#xA;&#x9;&#x9;      when ?=30 and ?=46 then 'HealthspringMAPD'&#xA;&#x9;&#x9;&#x9;  when ?=30 and ?=47 then 'HealthspringPDP'&#xA;&#x9;&#x9;&#x9;  else client end as client from  [CommonCore].[dbo].[Client] WHERE pmdClientID = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::clientname" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::pPopulationID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::pPopulationID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::pPopulationID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::pPopulationID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Logging Information"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8985B554-193B-41F0-99D5-66F229487176}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logging Information"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{89DC7626-460C-446C-A9AD-F097E07628BE}"
              SQLTask:SqlStatementSource="&#xA;insert into TMR_Second_Step_LoggingInformation (date,Var_recreatesynonym,Var_Quarter,Var_PopulationID,Var_Letterdate,Var_PDTCutoffdate,Var_Clientid,Var_Year,Var_overWrite) values(getdate(),?,?,?,?,?,?,?,?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::recreatesynonyms"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::Quarter"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::pPopulationID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::pLetterDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::PDTPCutoff"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::oYear"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::overWrite"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Producing Excel Files"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{69EA7FC2-11D4-478A-A631-6A06427C4BAE}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:FailPackageOnFailure="True"
          DTS:FailParentOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Producing Excel Files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::clientname,System::CreationDate,User::overWrite,User::oYear,User::pClientid,User::PDTPCutoff,User::pLetterDate,User::pPopulationID,User::Quarter,User::recreatesynonyms"
              ReadWriteVariables="User::ExcelFullPath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Settings.get_Default():ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Sett" +
    "ings")]

namespace ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[    #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.IO;
#endregion

namespace ST_3fa04bc4674949d9a6d45e1fd81f8c6f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        private string campaignid;
        private string campgainid;
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::clientname,System::CreationDate,User::overWrite,User::oYear,User::pClientid,User::PDTPCutoff,User::pLetterDate,User::pPopulationID,User::Quarter,User::recreatesynonyms
            string ClientName = Dts.Variables["User::clientname"].Value.ToString();
            int OverWrite = (int)Dts.Variables["User::overWrite"].Value;
            int Year = (int)Dts.Variables["User::oYear"].Value;
            int ClientId = (int)Dts.Variables["User::pClientid"].Value;
            string DTPcutoff = Dts.Variables["User::PDTPCutoff"].Value.ToString();
            string LetterDate = Dts.Variables["User::pLetterDate"].Value.ToString();
            int PopulationID = (int)Dts.Variables["User::pPopulationID"].Value;
            int Recreatesynonyms = (int)Dts.Variables["User::recreatesynonyms"].Value;
            string Quarter = Dts.Variables["User::Quarter"].Value.ToString();

            //the datetime and Log folder will be used for error log file in case error occured
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
           // string LogFolder = @"C:\Log\";

            //Declare Variables
            //Provide Excel file name that you like to create
            string ExcelFileName = ClientName;
            string excelsecondfile = ClientName;
            //Provide the source folder path where you want to create excel file
            string FolderPath = @"Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\";
            //Provide the Stored Procedure Name
            string StoredProcedureName = "temp.CreateTMRCampaign";

            //Create Connection to SQL Server Database from which you like to export tables to Excel
            SqlConnection SQLConnection = new SqlConnection();
            string DatabaseName = "CREF_CDE_TMR";
            SQLConnection.ConnectionString = "Data Source =sqlops; Initial Catalog =" + DatabaseName + "; " + "Integrated Security=true;";
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = SQLConnection;
            cmd.CommandText = StoredProcedureName;
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.Add("@pClientID", SqlDbType.Int).Value = ClientId;
            cmd.Parameters.Add("@pPopulationid", SqlDbType.Int).Value = PopulationID;
            cmd.Parameters.Add("@pLetterDate", SqlDbType.Date).Value = DateTime.Parse(LetterDate);
            cmd.Parameters.Add("@pYear", SqlDbType.Int).Value = Year;
            cmd.Parameters.Add("@pDTPCutoff", SqlDbType.Date).Value = DateTime.Parse(DTPcutoff);
            cmd.Parameters.Add("@overWrite", SqlDbType.Int).Value = OverWrite;
            cmd.Parameters.Add("@recreateSynonyms", SqlDbType.Int).Value = Recreatesynonyms;


            //Provide the Database in which Stored Procedure exists


            //string connstring = "Provider = Microsoft.Jet.OLEDB.4.0; Data Source =" + FolderPath + ExcelFileName + ";" + "Extended Properties = \"Excel 8.0;HDR=Yes;"";

            //drop Excel file if exists
            //File.Delete(FolderPath + "\\" + ExcelFileName + ".xls");

           

                //Load Data into DataTable from by executing Stored Procedure

                SqlDataAdapter adapter = new SqlDataAdapter();

                adapter.SelectCommand = cmd;
                DataSet ds = new DataSet();
            
            
                // set the CommandTimeout
                adapter.SelectCommand.CommandTimeout = 0;
                adapter.Fill(ds);
            

           //add table names
                ds.Tables[0].TableName = "DTP Counts";
                ds.Tables[2].TableName = "Tier Matches";
                ds.Tables[3].TableName = "Provider details";

// string campgainid = String.Empty;
            if (ds.Tables.Count > 5)
            {
                campaignid = ds.Tables[5].Rows[0].ItemArray[0].ToString();
            }
            //   string campgainid = ds.Tables[5].Rows[0].ItemArray[0].ToString();
            //    string ifcamgainNull = "NoCampaingId";
            //  string finalcampgainid = campgainid ?? ifcamgainNull;

            ExcelFileName = "AH_" + ExcelFileName + campgainid + "_" + "Q" + Quarter + "TMR_ProviderManifest_" + datetime;
          

            OleDbConnection Excel_OLE_Con = new OleDbConnection();
            OleDbCommand Excel_OLE_Cmd = new OleDbCommand();

            //Construct ConnectionString for Excel
            string connstring = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + ExcelFileName
                + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";
            // get the file name for copying it to another destination
            Dts.Variables["User::ExcelFullPath"].Value = ExcelFileName.ToString();
        

            // Get the Column List from Data Table so can create Excel Sheet with Header
            foreach (DataTable table in ds.Tables)
            {
                if (!table.TableName.Contains("Table"))
                {
                    string TableColumns = "";
                    foreach (DataColumn column in table.Columns)
                    {
                        TableColumns += column + "],[";
                    }
                    // Replace most right comma from Columnlist
                    TableColumns = ("[" + TableColumns.Replace(",", " Text,").TrimEnd(','));
                    TableColumns = TableColumns.Remove(TableColumns.Length - 2);


                    //Use OLE DB Connection and Create Excel Sheet
                    Excel_OLE_Con.ConnectionString = connstring;
                    Excel_OLE_Con.Open();
                    Excel_OLE_Cmd.Connection = Excel_OLE_Con;
                    Excel_OLE_Cmd.CommandText = "Create table " + "[" + table.TableName + "] (" + TableColumns + ")";
                    Excel_OLE_Cmd.ExecuteNonQuery();
                    String sqlCommandInsert = "";
                    String sqlCommandValue = "";
                    foreach (DataColumn dataColumn in table.Columns)
                    {
                        sqlCommandValue += dataColumn + "],[";
                    }

                    sqlCommandValue = "[" + sqlCommandValue.TrimEnd(',');
                    sqlCommandValue = sqlCommandValue.Remove(sqlCommandValue.Length - 2);
                   
                    sqlCommandInsert = "INSERT into [" + table.TableName + "](" + sqlCommandValue + ") VALUES(";

                    int columnCount = table.Columns.Count;
                    foreach (DataRow row in table.Rows)
                    {
                        string columnvalues = "";
                        for (int i = 0; i < columnCount; i++)
                        {
                            int index = table.Rows.IndexOf(row);
                            columnvalues += "'" + table.Rows[index].ItemArray[i] + "',";

                        }
                        columnvalues = columnvalues.TrimEnd(',');
                        sqlCommandInsert = sqlCommandInsert.Replace("'", "''");
                        var command = sqlCommandInsert + columnvalues + ")";
                        Excel_OLE_Cmd.CommandText = command;
                        Excel_OLE_Cmd.ExecuteNonQuery();
                    }
                    Excel_OLE_Con.Close();

                }
            }





            // Excel_OLE_Con.Close();

            ds.Tables[3].TableName = "Provider details";

            excelsecondfile = "AH_" +ClientName+ campgainid + "_" + "Q" + Quarter+"TMR" +  "_ProviderDetails_" +"ClientCopy"+ datetime;

            OleDbConnection Excel_OLE_Con2 = new OleDbConnection();
            OleDbCommand Excel_OLE_Cmd2 = new OleDbCommand();

            //Construct ConnectionString for Excel
            string connstring2 = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + excelsecondfile
                + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";
            // foreach (DataTable table in ds.Tables[3].TableName)
            DataTable table2 = ds.Tables[3];

            //if (!table.TableName.Contains("Provider details"))


            string TableColumns2 = "";
            foreach (DataColumn column in table2.Columns)
            {
                TableColumns2 += column + "],[";
            }
            // Replace most right comma from Columnlist
            TableColumns2 = ("[" + TableColumns2.Replace(",", " Text,").TrimEnd(','));
            TableColumns2 = TableColumns2.Remove(TableColumns2.Length - 2);


            //Use OLE DB Connection and Create Excel Sheet
            Excel_OLE_Con2.ConnectionString = connstring2;
            Excel_OLE_Con2.Open();
            Excel_OLE_Cmd2.Connection = Excel_OLE_Con2;
            Excel_OLE_Cmd2.CommandText = "Create table " + "[" + table2.TableName + "] (" + TableColumns2 + ")";
            Excel_OLE_Cmd2.ExecuteNonQuery();
            String sqlCommandInsert2 = "";
            String sqlCommandValue2 = "";
            foreach (DataColumn dataColumn in table2.Columns)
            {
                sqlCommandValue2 += dataColumn + "],[";
            }

            sqlCommandValue2 = "[" + sqlCommandValue2.TrimEnd(',');
            sqlCommandValue2 = sqlCommandValue2.Remove(sqlCommandValue2.Length - 2);
            sqlCommandInsert2 = "INSERT into [" + table2.TableName + "](" + sqlCommandValue2 + ") VALUES(";

            int columnCount2 = table2.Columns.Count;
            foreach (DataRow row in table2.Rows)
            {
                string columnvalues = "";
                for (int i = 0; i < columnCount2; i++)
                {
                    int index = table2.Rows.IndexOf(row);
                    columnvalues += "'" + table2.Rows[index].ItemArray[i] + "',";

                }
                columnvalues = columnvalues.TrimEnd(',');
                var command = sqlCommandInsert2 + columnvalues + ")";
                Excel_OLE_Cmd2.CommandText = command;
                Excel_OLE_Cmd2.ExecuteNonQuery();
            }








            Excel_OLE_Con2.Close();







            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6E4295B-F583-4423-806B-8ADF08BCFE70}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7d4c4dc0d3e445f9b49f402e9187cae9</RootNamespace>
    <AssemblyName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</msb:DisplayName>
		<msb:ProjectId>{E165DCE2-2997-49D7-B2BB-A1D683817843}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7d4c4dc0d3e445f9b49f402e9187cae9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7d4c4dc0d3e445f9b49f402e9187cae9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7d4c4dc0d3e445f9b49f402e9187cae9")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALJYvF4AAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAAckMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACBDAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
QwAAAAAAAEgAAAACAAUAQCsAACgXAAABAAAAAAAAAGhCAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDQCQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIwAAcG8SAAAKbxMAAAqlJgAAAQsCKBAAAApvEQAACnJDAABw
bxIAAApvEwAACqUmAAABDAIoEAAACm8RAAAKclsAAHBvEgAACm8TAAAKpSYAAAENAigQAAAKbxEA
AApyewAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApynQAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApywQAAcG8SAAAKbxMAAAqlJgAAARMGAigQAAAKbxEAAApy6QAAcG8SAAAKbxMA
AAqlJgAAARMHAigQAAAKbxEAAApyFwEAcG8SAAAKbxMAAApvFAAAChMIKBUAAAoTHRIdcjMBAHAo
FgAAChMJBhMKBhMLclEBAHATDHLHAQBwEw1zFwAAChMOcvUBAHATDxEOcg8CAHARD3JdAgBwKBgA
AApvGQAACnMaAAAKExAREBEObxsAAAoREBENbxwAAAoREBpvHQAAChEQbx4AAApylQIAcB5vHwAA
CgmMJgAAAW8gAAAKERBvHgAACnKrAgBwHm8fAAAKEQaMJgAAAW8gAAAKERBvHgAACnLJAgBwHx9v
HwAAChEFKCEAAAqMFQAAAW8gAAAKERBvHgAACnLjAgBwHm8fAAAKCIwmAAABbyAAAAoREG8eAAAK
cvECAHAfH28fAAAKEQQoIQAACowVAAABbyAAAAoREG8eAAAKcgkDAHAebx8AAAoHjCYAAAFvIAAA
ChEQbx4AAApyHwMAcB5vHwAAChEHjCYAAAFvIAAACnMiAAAKJREQbyMAAApzJAAAChMRJW8lAAAK
Fm8mAAAKERFvJwAACiYREW8oAAAKFm8pAAAKckMDAHBvKgAAChERbygAAAoYbykAAApyWQMAcG8q
AAAKERFvKAAAChlvKQAACnJzAwBwbyoAAAoREW8oAAAKbysAAAobMSoCERFvKAAAChtvKQAACm8s
AAAKFm8tAAAKby4AAAoWmm8UAAAKfQEAAAQdjScAAAElFnKVAwBwoiUXEQqiJRgCewIAAASiJRly
nQMAcKIlGhEIoiUbcqMDAHCiJRwRCaIoLwAAChMKczAAAAoTEnMxAAAKExNyzwMAcBEMEQpyLQQA
cCgyAAAKExQCKBAAAApvEQAACnKLBABwbxIAAAoRCm8UAAAKbzMAAAoREW8oAAAKbzQAAAoTHjjU
AgAAER5vNQAACnQUAAABEx8RH282AAAKcrMEAHBvNwAACjqwAgAAcr8EAHATIBEfbzgAAApvNAAA
ChMkKx4RJG81AAAKdBcAAAETJREgESVywQQAcCg5AAAKEyARJG86AAAKLdneFREkdRgAAAETJhEm
LAcRJm87AAAK3HLJBABwESByzQQAcHLRBABwbzwAAAoXjTUAAAElFh8snW89AAAKKD4AAAoTIBEg
JW8/AAAKGFlvQAAAChMgERIRFG8ZAAAKERJvQQAAChETERJvQgAAChETG40nAAABJRZy3wQAcKIl
FxEfbzYAAAqiJRhy/QQAcKIlGREgoiUacgUFAHCiKC8AAApvHAAAChETb0MAAAomcr8EAHATIXK/
BABwEyIRH284AAAKbzQAAAoTJCseESRvNQAACnQXAAABEycRIhEncsEEAHAoOQAAChMiESRvOgAA
Ci3Z3hURJHUYAAABEyYRJiwHESZvOwAACtxyyQQAcBEiF401AAABJRYfLJ1vPQAACig+AAAKEyIR
IiVvPwAAChhZb0AAAAoTIhuNJwAAASUWcgkFAHCiJRcRH282AAAKoiUYciUFAHCiJRkRIqIlGnIr
BQBwoigvAAAKEyERH284AAAKbysAAAoTIxEfbywAAApvNAAAChMkOLkAAAARJG81AAAKdBkAAAET
KHK/BABwEykWEysrUREfbywAAAoRKG9EAAAKEywajRwAAAElFhEpoiUXcj8FAHCiJRgRH28sAAAK
ESxvLQAACm8uAAAKESuaoiUZckMFAHCiKEUAAAoTKRErF1gTKxErESMyqREpF401AAABJRYfLJ1v
PQAAChMpESFyPwUAcHJJBQBwbzwAAAoTIREhESlyBQUAcCgYAAAKEyoRExEqbxwAAAoRE29DAAAK
JhEkbzoAAAo6O////94VESR1GAAAARMmESYsBxEmbzsAAArcERJvRgAAChEebzoAAAo6IP3//94V
ER51GAAAARMmESYsBxEmbzsAAArcERFvKAAAChlvKQAACnJzAwBwbyoAAAodjScAAAElFnKVAwBw
oiUXBqIlGAJ7AgAABKIlGXKdAwBwoiUaEQiiJRtyTwUAcKIlHBEJoigvAAAKEwtzMAAAChMVczEA
AAoTFnLPAwBwEQwRC3ItBABwKDIAAAoTFxERbygAAAoZbykAAAoTGHK/BABwExkRGG84AAAKbzQA
AAoTHiseER5vNQAACnQXAAABEy0RGREtcsEEAHAoOQAAChMZER5vOgAACi3Z3hURHnUYAAABEyYR
JiwHESZvOwAACtxyyQQAcBEZcs0EAHBy0QQAcG88AAAKF401AAABJRYfLJ1vPQAACig+AAAKExkR
GSVvPwAAChhZb0AAAAoTGREVERdvGQAAChEVb0EAAAoRFhEVb0IAAAoRFhuNJwAAASUWct8EAHCi
JRcRGG82AAAKoiUYcv0EAHCiJRkRGaIlGnIFBQBwoigvAAAKbxwAAAoRFm9DAAAKJnK/BABwExpy
vwQAcBMbERhvOAAACm80AAAKEx4rHhEebzUAAAp0FwAAARMuERsRLnLBBABwKDkAAAoTGxEebzoA
AAot2d4VER51GAAAARMmESYsBxEmbzsAAArccskEAHARGxeNNQAAASUWHyydbz0AAAooPgAAChMb
ERslbz8AAAoYWW9AAAAKExsbjScAAAElFnIJBQBwoiUXERhvNgAACqIlGHIlBQBwoiUZERuiJRpy
KwUAcKIoLwAAChMaERhvOAAACm8rAAAKExwRGG8sAAAKbzQAAAoTHjimAAAAER5vNQAACnQZAAAB
Ey9yvwQAcBMwFhMyK1ERGG8sAAAKES9vRAAAChMzGo0cAAABJRYRMKIlF3I/BQBwoiUYERhvLAAA
ChEzby0AAApvLgAAChEymqIlGXJDBQBwoihFAAAKEzARMhdYEzIRMhEcMqkRMBeNNQAAASUWHyyd
bz0AAAoTMBEaETByBQUAcCgYAAAKEzERFhExbxwAAAoRFm9DAAAKJhEebzoAAAo6Tv///94VER51
GAAAARMmESYsBxEmbzsAAArcERVvRgAACgIoEAAAChZvRwAACipBrAAAAgAAAOMDAAArAAAADgQA
ABUAAAAAAAAAAgAAANcEAAArAAAAAgUAABUAAAAAAAAAAgAAAJYFAADMAAAAYgYAABUAAAAAAAAA
AgAAAKUDAADnAgAAjAYAABUAAAAAAAAAAgAAADsHAAArAAAAZgcAABUAAAAAAAAAAgAAAC8IAAAr
AAAAWggAABUAAAAAAAAAAgAAAO4IAAC5AAAApwkAABUAAAAAAAAAHgIoSAAACioeAihJAAAKKq5+
AwAABC0eco0FAHDQAwAAAihKAAAKb0sAAApzTAAACoADAAAEfgMAAAQqGn4EAAAEKh4CgAQAAAQq
Gn4FAAAEKh4CKE0AAAoqLnMIAAAGgAUAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAACsBQAAI34AABgGAACQCAAAI1N0cmluZ3MAAAAAqA4AAAAGAAAjVVMAqBQAABAAAAAj
R1VJRAAAALgUAABwAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAOAAAAAUA
AAAIAAAACQAAAAEAAABNAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAA
AAAA2wQBAAAAAAAGAC4DmQYGAL0DmQYGAHoChgYPAA0HAAAGAKcCbgUGABEDbgUGAPICbgUGAKQD
bgUGAE4DbgUGAGcDbgUGAL4CbgUGANkCKAQKAIIDigQKAMoBigQOAPEF/AcOALEA/AcOANkHWwAO
AOEFZwAOAKQAZwAOAPgAWwAGAFcBEQUGAF8GggcOADkFWwAGAAsBEQUOAFwIWwAGABgFEQUGAF0C
hgYGANIHEQUGACcGuQYGABIGWQUSAC0CxQQSAI4CxQQSAAECRAUGAEICmQYKALMEigQWAFoHYAEW
AAIBYAEGAAEAEQUGAFkEEQUOAOQF/wUOAKcA/wUOAI4BWwAOAKkF/AcOAEMG/AcOAIABWwAOADcG
/wUOAFAG/AcOAFMG/wUOAIAFWwAOAOYBWwAOAMAFWwAOAJQFWwAGAB4GEQUGAJUBEQUGABcBEQUG
AHYIbgUAAAAAKwAAAAAAAQABAAEAEAAuBfwDOQABAAEAAAAQAMAGHAdxAAMAAwAAARAAZAccB4UA
BQAHAAMBAAC0BwAAaQAGAAoAAQCGAHABAQCRAHABEQAdBXMBEQC6AXcBEQDoAHsBBgZTAH8BVoCk
B4IBVoCaAYIBUCAAAAAAhgA0BQYAAQDYKgAAAACGGHkGBgABAOAqAAAAAIMYeQYGAAEA6CoAAAAA
kwgjBoYBAQAUKwAAAACTCKIBiwEBABsrAAAAAJMIrgGQAQEAIysAAAAAlgjhB5YBAgAqKwAAAACG
GHkGBgACADIrAAAAAJEYfwabAQIAAAABAO8DCQB5BgEAEQB5BgYAGQB5BgoAKQB5BhAAMQB5BhAA
OQB5BhAAQQB5BhAASQB5BhAAUQB5BhAAWQB5BhAAYQB5BhAAaQB5BgYA2QB5BgYAAQF5BhUAEQF5
BgYAcQCsB2UAGQFWB2sAIQEIBXEAKQHbA3gA4QBXBHwAqQBUCIAAqQBXBIUAeQB5BgYAOQHLB4oA
QQFCBBAAgQB5BgYAgQDSBZEASQFECBAASQGKAZcAgQCVB54AWQGCAKQAcQHlA64AqQAnArMAeQF5
BgYAeQHOALkAiQB5BgYAeQG8AL8ASQEoCAEAgQEDBcQAiQBLB8oAiQEIBdAAoQBJARAAkQEeCNYA
oQDCB9oAmQEIBeAAyQBkCOYAOQHLB+sAkQB5BgYAmQB5BgYAOQHLB/EAKQHlA64AkQFrBvkAsQAS
CHgAoQA7AXwAOQFtB/4AoQB2BwMBOQHLBwkBsQA7CBABwQAfAgYAOQHgABQBOQGcABoBOQHLByAB
OQFgBNYAOQH1AyYBQQEpBQYAmQDSBSsBSQF/CNYAmQEgBDEBOQHLBzcBQQEZAgYAGQHtBwEAcQB5
BgYA4QB5BgYAsQEpAT0BsQFyCEYB6QB5BkwBCQF5BgYACAAcAGYBCAAgAGsBKQBzANYBLgALAK4B
LgATALcBLgAbANYBLgAjAN8BLgArAAgCLgAzAAgCLgA7AAgCLgBDAN8BLgBLAA4CLgBTAAgCLgBb
ACUCQwBjAGsBSQBzANYBYwBrAGsBoQB7AGsBGwADAAEABAADAAAAJwafAQAAwgGkAQAA5QepAQIA
BAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAADh3xbAAAAAAAAAcAAAAEAAAAAAAAAAAAAABU
AXkAAAAAAA4AAAAAAAAAAAAAAF0BawQAAAAABAAAAAAAAAAAAAAAVAFbAAAAAAAEAAAAAAAAAAAA
AABUAREFAAAAAA4AAAAAAAAAAAAAAF0BNAAAAAAAAAAAAAEAAADKBgAABQACAAAAAAAASW50MzIA
U1RfN2Q0YzRkYzBkM2U0NDVmOWI0OWY0MDJlOTE4N2NhZTkAPE1vZHVsZT4ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIA
bXNjb3JsaWIAQWRkAGNhbXBhaWduaWQAY2FtcGdhaW5pZABUcmltRW5kAE9sZURiQ29tbWFuZABT
cWxDb21tYW5kAGdldF9TZWxlY3RDb21tYW5kAHNldF9TZWxlY3RDb21tYW5kAFJlcGxhY2UAZGVm
YXVsdEluc3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfVGFibGVOYW1lAHNldF9UYWJsZU5hbWUARGF0ZVRp
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBTcWxEYlR5cGUAc2V0X0NvbW1hbmRU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFJlbW92ZQBTVF8zZmEwNGJjNDY3
NDk0OWQ5YTZkNDVlMWZkODFmOGM2ZgBJbmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
c2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfN2Q0YzRkYzBkM2U0NDVm
OWI0OWY0MDJlOTE4N2NhZTkuZGxsAEZpbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VN
YW4AT3BlbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRh
Q29sdW1uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9u
AHNldF9Db25uZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBDdWx0dXJlSW5mbwBDaGFyAGdldF9SZXNvdXJjZU1hbmFnZXIARGJQYXJhbWV0ZXIA
U3FsUGFyYW1ldGVyAFNxbERhdGFBZGFwdGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfN2Q0YzRkYzBkM2U0NDVmOWI0OWY0MDJlOTE4N2NhZTku
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzdkNGM0ZGMw
ZDNlNDQ1ZjliNDlmNDAyZTkxODdjYWU5LlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFi
bGVzAFNldHRpbmdzAENvbnRhaW5zAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRf
UGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQA
T2JqZWN0AERhdGFTZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3Fs
Q2xpZW50AGdldF9DdXJyZW50AGdldF9Db3VudABzZXRfQ29tbWFuZFRpbWVvdXQATW92ZU5leHQA
c2V0X0NvbW1hbmRUZXh0AGdldF9Ob3cARGF0YVJvdwBnZXRfSXRlbUFycmF5AGdldF9Bc3NlbWJs
eQBFeGVjdXRlTm9uUXVlcnkAAAAhVQBzAGUAcgA6ADoAYwBsAGkAZQBuAHQAbgBhAG0AZQAAH1UA
cwBlAHIAOgA6AG8AdgBlAHIAVwByAGkAdABlAAAXVQBzAGUAcgA6ADoAbwBZAGUAYQByAAAfVQBz
AGUAcgA6ADoAcABDAGwAaQBlAG4AdABpAGQAACFVAHMAZQByADoAOgBQAEQAVABQAEMAdQB0AG8A
ZgBmAAAjVQBzAGUAcgA6ADoAcABMAGUAdAB0AGUAcgBEAGEAdABlAAAnVQBzAGUAcgA6ADoAcABQ
AG8AcAB1AGwAYQB0AGkAbwBuAEkARAAALVUAcwBlAHIAOgA6AHIAZQBjAHIAZQBhAHQAZQBzAHkA
bgBvAG4AeQBtAHMAABtVAHMAZQByADoAOgBRAHUAYQByAHQAZQByAAAdeQB5AHkAeQBNAE0AZABk
AEgASABtAG0AcwBzAAB1WgA6AFwARQB4AHQAZQByAG4AYQBsAFwAQwBsAGkAbgBpAGMAYQBsAFwA
VABNAFIAIABDAGEAbQBwAGEAaQBnAG4AcwBcAFQATQBSACAAUAByAG8AdgBpAGQAZQByACAATQBh
AG4AaQBmAGUAcwB0AHMAXAAALXQAZQBtAHAALgBDAHIAZQBhAHQAZQBUAE0AUgBDAGEAbQBwAGEA
aQBnAG4AABlDAFIARQBGAF8AQwBEAEUAXwBUAE0AUgAATUQAYQB0AGEAIABTAG8AdQByAGMAZQAg
AD0AcwBxAGwAbwBwAHMAOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnACAAPQAANzsA
IABJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AdAByAHUAZQA7AAAVQABw
AEMAbABpAGUAbgB0AEkARAAAHUAAcABQAG8AcAB1AGwAYQB0AGkAbwBuAGkAZAAAGUAAcABMAGUA
dAB0AGUAcgBEAGEAdABlAAANQABwAFkAZQBhAHIAABdAAHAARABUAFAAQwB1AHQAbwBmAGYAABVA
AG8AdgBlAHIAVwByAGkAdABlAAAjQAByAGUAYwByAGUAYQB0AGUAUwB5AG4AbwBuAHkAbQBzAAAV
RABUAFAAIABDAG8AdQBuAHQAcwAAGVQAaQBlAHIAIABNAGEAdABjAGgAZQBzAAAhUAByAG8AdgBp
AGQAZQByACAAZABlAHQAYQBpAGwAcwAAB0EASABfAAAFXwBRAAArVABNAFIAXwBQAHIAbwB2AGkA
ZABlAHIATQBhAG4AaQBmAGUAcwB0AF8AAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBv
AGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMA
ZQA9AABdOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBl
AGwAIAAxADIALgAwACAAWABtAGwAOwBIAEQAUgA9AFkARQBTADsAIgAAJ1UAcwBlAHIAOgA6AEUA
eABjAGUAbABGAHUAbABsAFAAYQB0AGgAAAtUAGEAYgBsAGUAAAEAB10ALABbAAADWwAAAywAAA0g
AFQAZQB4AHQALAAAHUMAcgBlAGEAdABlACAAdABhAGIAbABlACAAWwAAB10AIAAoAAADKQAAG0kA
TgBTAEUAUgBUACAAaQBuAHQAbwAgAFsAAAVdACgAABMpACAAVgBBAEwAVQBFAFMAKAAAAycAAQUn
ACwAAQUnACcAAT1UAE0AUgBfAFAAcgBvAHYAaQBkAGUAcgBEAGUAdABhAGkAbABzAF8AQwBsAGkA
ZQBuAHQAQwBvAHAAeQAAcVMAVABfADcAZAA0AGMANABkAGMAMABkADMAZQA0ADQANQBmADkAYgA0
ADkAZgA0ADAAMgBlADkAMQA4ADcAYwBhAGUAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAG/uBp54smxIjZxhqIOd9SoABCABAQgDIAABBSABARERBCABAQ4FIAEB
EX1JBzQOCAgIDg4ICA4ODg4ODhI9DhJBEkUSSRJNDhJJEk0OElEODg4IEVUSWRJRDg4OCBJZEl0S
YRJdEmUODggIEl0SXRJlDg4ICAUgABKAjQUgABKAkQYgARKAlRwDIAAcAyAADgQAABFVBCABDg4G
AAMODg4OBSABARI9BiABARGAqQUgABKArQkgAhKAsQ4RgLUEIAEBHAUAARFVDgUgAQESQQQgABJB
BSABCBJFBSAAEoDFBSABElEIAyAACAUgABKAzQUgARJlCAQgAB0cBQABDh0OBwAEDg4ODg4EIAAS
WQQgAQIOBSAAEoDRBgADDhwcHAMgAAIFIAIODg4FIAEOHQMFAAIODg4EIAEOCAUgAQESSQUgAQgS
ZQUAAQ4dHAgAARKA2RGA3QUgABKA4QcgAgEOEoDhCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAA
AAIGDgMGEnUDBhJ5AwYSEAIGCAMGERQEAAASdQQAABJ5BQABARJ5BAAAEhADAAABBAgAEnUECAAS
eQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTVF83ZDRjNGRjMGQzZTQ0NWY5YjQ5ZjQwMmU5MTg3Y2FlOQAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASEMAAAAAAAAAAAAAYkMA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRDAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAPFsDh0AAAEA8WwOHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
NwBkADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgANwBj
AGEAZQA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANAAzADgA
LgAyADcAOAA4ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANwBk
ADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgANwBjAGEA
ZQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwA3AGQANABjADQAZABjADAAZAAzAGUANAA0ADUAZgA5AGIANAA5AGYANAAwADIAZQA5ADEA
OAA3AGMAYQBlADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8ANwBkADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgA
NwBjAGEAZQA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3
ADQAMwA4AC4AMgA3ADgAOAA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADQAMwA4AC4AMgA3ADgAOAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHQzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7216F3B3-32F2-4E2C-A967-CE04F926FD17}"
          DTS:From="Package\Sequence Container\getting Client Name"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Producing Excel Files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{9C8BD9E9-312F-471B-B234-F4D04A743B32}"
          DTS:From="Package\Sequence Container\Producing Excel Files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Copy Excel File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{8EB99545-E84A-4E56-8A62-716E3F074D36}"
          DTS:From="Package\Sequence Container\Copy Excel File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Logging Information" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E93D7131-ADC0-4C8A-B46B-EADA0EA8C60E}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Send_Mail_Successful_job" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{694B96CE-CF37-4C83-BC3F-87E9EB42DD17}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Send_Mail_Failed_job"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{D711D4A2-BD64-4830-9462-A66E945F10B0}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{A60EEF93-C012-4A7C-A6FA-93F160B2D2B1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{0A1446D7-6AE3-4568-9A09-ACEBC6112C24}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="successfulresult">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="181,42"
          Id="Package\Send_Mail_Failed_job"
          TopLeft="566,524.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Send_Mail_Successful_job"
          TopLeft="4.50000000000006,517.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Sequence Container\Copy Excel File"
          TopLeft="19.5,209.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\getting Client Name"
          TopLeft="12.5,5.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Sequence Container\Logging Information"
          TopLeft="6.50000000000003,311.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Sequence Container\Producing Excel Files"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="94,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="94,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="94,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="188,409"
          Size="188,452"
          Id="Package\Sequence Container"
          TopLeft="263.5,56.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="263.5,282.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.9999999999999,256"
              Start="0,0"
              End="-49.4999999999999,256">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-24.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.5,0"
                    Point2="-28.5,0"
                    Point3="-28.5,4" />
                  <mssgle:LineSegment
                    End="-28.5,252" />
                  <mssgle:CubicBezierSegment
                    Point1="-28.5,252"
                    Point2="-28.5,256"
                    Point3="-32.5,256" />
                  <mssgle:LineSegment
                    End="-49.4999999999999,256" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="451.5,282.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.5,263"
              Start="0,0"
              End="107,263">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.25,0" />
                  <mssgle:CubicBezierSegment
                    Point1="53.25,0"
                    Point2="57.25,0"
                    Point3="57.25,4" />
                  <mssgle:LineSegment
                    End="57.25,259" />
                  <mssgle:CubicBezierSegment
                    Point1="57.25,259"
                    Point2="57.25,263"
                    Point3="61.25,263" />
                  <mssgle:LineSegment
                    End="107,263" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="42.00865234375,-15.7490234375,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="{02EF9035-454F-4BA7-96C3-18F829909453}"
          TopLeft="244,83" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\getting Client Name.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{A0984CE8-F8E3-45A3-8DB6-8C5A2CA8EC15}"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>