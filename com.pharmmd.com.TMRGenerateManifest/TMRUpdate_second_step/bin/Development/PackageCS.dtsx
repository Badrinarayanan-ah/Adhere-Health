<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/23/2019 1:27:43 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="P10PMW90PRDP03"
  DTS:CreatorName="PHARMMD\mike.rezvani"
  DTS:DTSID="{1D6888C5-E937-45F6-A2D4-71740BA8BF05}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="103"
  DTS:VersionGUID="{016C5473-8773-425D-A91D-4840FC3A5B2B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQLETL]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{89DC7626-460C-446C-A9AD-F097E07628BE}"
      DTS:ObjectName="SQLETL">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQLETL;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[sqletl.msdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{47D759C1-9A58-4A6F-B4A0-CD28C4A5F83D}"
      DTS:ObjectName="sqletl.msdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=sqletl;Initial Catalog=msdb;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[sqlopsdev03.pharmmd.local\sqlopsy.CommonCore]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2A609A89-0367-43A2-AFBE-A7674DCECBFD}"
      DTS:ObjectName="sqlopsdev03.pharmmd.local\sqlopsy.CommonCore">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=sqlopsdev03.pharmmd.local\sqlopsy;Initial Catalog=CommonCore;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7BFBB2C8-C729-46F3-A180-DA024D317053}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Job has started at &quot;+  (DT_STR, 30, 1252)  @[System::StartTime] + &quot; and finished at &quot; +  substring((DT_STR, 30, 1252)  GETDATE(),1,19)+ &quot; successfully for &quot; + @[User::clientname]+ &quot; and file name is &quot;+ @[User::ExcelFullPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="body">
      <DTS:VariableValue
        DTS:DataType="8">Job has started at 7/16/2019 9:13:34 AM and finished at 2019-07-16 09:23:08 successfully for  and file name is </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C14AF6C-4657-416C-975F-E58468EF407D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Job has started at &quot;+  (DT_STR, 30, 1252)  @[System::StartTime] + &quot; and Failed at &quot; +  substring((DT_STR, 30, 1252)  GETDATE(),1,19)+ &quot;  for  &quot; + @[User::clientname]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Body_For_Failed_Job">
      <DTS:VariableValue
        DTS:DataType="8">Job has started at 7/16/2019 9:13:34 AM and Failed at 2019-07-16 09:23:08  for  </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5389538A-FBF3-4698-9775-29104101BCF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="clientname">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCE90F0A-E750-4DDB-ADF4-C2818C1471A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="destination">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\Copy_Of_ExcelFile\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{878A5AC1-7F76-4B2B-BBD3-9258D30538B7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::destination]+  @[User::rightexcelfile]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exceldestination">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\Copy_Of_ExcelFile\.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2B356C1-0C46-4CDB-AC2E-7401B133CF8F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFullPath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78E0B503-85B9-4389-AD79-2FC62EEB134E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::excelpath]+&quot;\\&quot;+ @[User::rightexcelfile]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="excelinput">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F9AB9B69-93C2-491A-8761-F1A6FF850450}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="excelpath">
      <DTS:VariableValue
        DTS:DataType="8">Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61390AB3-2799-45CD-8A3D-2B2D2A0D2D2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="from">
      <DTS:VariableValue
        DTS:DataType="8">mike.rezvani@adherehealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA721CC2-BCDA-44E6-B779-7DAABB6526BB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="overWrite">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BECD2A40-C7E6-4C20-B904-6486C9B38174}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oYear">
      <DTS:VariableValue
        DTS:DataType="3">2019</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C7F0280-2462-419D-B60D-6B0C05F230B4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pClientid">
      <DTS:VariableValue
        DTS:DataType="3">79</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B70A3418-BA22-4003-A404-9565F29BA602}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PDTPCutoff">
      <DTS:VariableValue
        DTS:DataType="8">2019-06-30</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8893FDD8-80ED-41FF-AA74-D4423B9AC50F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pLetterDate">
      <DTS:VariableValue
        DTS:DataType="8">2019-07-16</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1E6ED24-AED0-4459-AC10-315D26CF2605}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pPopulationID">
      <DTS:VariableValue
        DTS:DataType="3">79</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEFB30E1-2983-4802-AA02-6A4E10A63F29}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Quarter">
      <DTS:VariableValue
        DTS:DataType="8">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC9CCE49-3801-4059-9A13-CC7D12AB2A64}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="receipent">
      <DTS:VariableValue
        DTS:DataType="8">mike.rezvani@adherehealth.com;accountManagement@pharmmd.hostpilot.com;ryan.dacus@adherehealth.com; cynthia.sandahl@adherehealth.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73BF1B55-757D-4FC5-AA44-12C4A9DD3FC2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="recreatesynonyms">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4242357-5603-4C98-80F8-FB8907F25A31}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ExcelFullPath]+&quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="rightexcelfile">
      <DTS:VariableValue
        DTS:DataType="8">.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{274322B5-E906-413A-A903-DF484AA45023}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="subject">
      <DTS:VariableValue
        DTS:DataType="8">successful execution</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send_Mail_Failed_job"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3D8C26EA-BFAE-4D55-99C8-7DFFA574BC20}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Mail_Failed_job"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{89DC7626-460C-446C-A9AD-F097E07628BE}"
          SQLTask:SqlStatementSource="&#xA;msdb.[dbo].[sp_send_dbmail] @profile_name='SQLETL'&#xA;,@recipients=?,&#xA;@from_address='cynthia.sandahl@adherehealth.com',@subject=' task  Successed',@body=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Body_For_Failed_Job"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::receipent"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send_Mail_Successful_job"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C7F2C07A-4057-4188-8636-18E02B30400A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Mail_Successful_job"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{89DC7626-460C-446C-A9AD-F097E07628BE}"
          SQLTask:SqlStatementSource="&#xA;msdb.[dbo].[sp_send_dbmail] @profile_name='SQLETL'&#xA;,@recipients='mike.rezvani@adherehealth.com;cynthia.sandahl@adherehealth.com;ryan.dacus@adherehealth.com',&#xA;@from_address='cynthia.sandahl@adherehealth.com',@subject=' task  Successed',@body=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::body"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D9A4AF89-2E25-4671-BB00-0C4A30CE3E41}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Copy Excel File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{421566B0-149D-4C48-AA83-D6D4C4C9850E}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Copy Excel File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskSourcePath="User::excelinput"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::exceldestination"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AC100583-2065-4FE2-83B9-A55A78FE4D3F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Execute SQL Task.EventHandlers[OnTaskFailed]"
              DTS:CreationName="OnTaskFailed"
              DTS:DTSID="{E2E9AB47-F024-4459-9570-14BFE64102AB}"
              DTS:EventID="0"
              DTS:EventName="OnTaskFailed"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{9ED32C52-298E-41F8-A72D-048812F13B7A}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A609A89-0367-43A2-AFBE-A7674DCECBFD}"
              SQLTask:SqlStatementSource="&#xA;  SELECT client from [CommonCore].[dbo].[Client] WHERE pmdClientID = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::clientname" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::pClientid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{69EA7FC2-11D4-478A-A631-6A06427C4BAE}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::clientname,System::CreationDate,User::overWrite,User::oYear,User::pClientid,User::PDTPCutoff,User::pLetterDate,User::pPopulationID,User::Quarter,User::recreatesynonyms"
              ReadWriteVariables="User::ExcelFullPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[    #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.IO;
#endregion

namespace ST_3fa04bc4674949d9a6d45e1fd81f8c6f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::clientname,System::CreationDate,User::overWrite,User::oYear,User::pClientid,User::PDTPCutoff,User::pLetterDate,User::pPopulationID,User::Quarter,User::recreatesynonyms
            string ClientName = Dts.Variables["User::clientname"].Value.ToString();
            int OverWrite = (int)Dts.Variables["User::overWrite"].Value;
            int Year = (int)Dts.Variables["User::oYear"].Value;
            int ClientId = (int)Dts.Variables["User::pClientid"].Value;
            string DTPcutoff = Dts.Variables["User::PDTPCutoff"].Value.ToString();
            string LetterDate = Dts.Variables["User::pLetterDate"].Value.ToString();
            int PopulationID = (int)Dts.Variables["User::pPopulationID"].Value;
            int Recreatesynonyms = (int)Dts.Variables["User::recreatesynonyms"].Value;
            string Quarter = Dts.Variables["User::Quarter"].Value.ToString();

            //the datetime and Log folder will be used for error log file in case error occured
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
           // string LogFolder = @"C:\Log\";

            //Declare Variables
            //Provide Excel file name that you like to create
            string ExcelFileName = ClientName;
            string excelsecondfile = ClientName;
            //Provide the source folder path where you want to create excel file
            string FolderPath = @"Z:\External\Clinical\TMR Campaigns\TMR Provider Manifests\";
            //Provide the Stored Procedure Name
            string StoredProcedureName = "temp.CreateTMRCampaign";

            //Create Connection to SQL Server Database from which you like to export tables to Excel
            SqlConnection SQLConnection = new SqlConnection();
            string DatabaseName = "CREF_CDE_TMR";
            SQLConnection.ConnectionString = "Data Source =sqlops; Initial Catalog =" + DatabaseName + "; " + "Integrated Security=true;";
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = SQLConnection;
            cmd.CommandText = StoredProcedureName;
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.Add("@pClientID", SqlDbType.Int).Value = ClientId;
            cmd.Parameters.Add("@pPopulationid", SqlDbType.Int).Value = PopulationID;
            cmd.Parameters.Add("@pLetterDate", SqlDbType.Date).Value = DateTime.Parse(LetterDate);
            cmd.Parameters.Add("@pYear", SqlDbType.Int).Value = Year;
            cmd.Parameters.Add("@pDTPCutoff", SqlDbType.Date).Value = DateTime.Parse(DTPcutoff);
            cmd.Parameters.Add("@overWrite", SqlDbType.Int).Value = OverWrite;
            cmd.Parameters.Add("@recreateSynonyms", SqlDbType.Int).Value = Recreatesynonyms;


            //Provide the Database in which Stored Procedure exists


            //string connstring = "Provider = Microsoft.Jet.OLEDB.4.0; Data Source =" + FolderPath + ExcelFileName + ";" + "Extended Properties = \"Excel 8.0;HDR=Yes;"";

            //drop Excel file if exists
            //File.Delete(FolderPath + "\\" + ExcelFileName + ".xls");

           

                //Load Data into DataTable from by executing Stored Procedure

                SqlDataAdapter adapter = new SqlDataAdapter();

                adapter.SelectCommand = cmd;
                DataSet ds = new DataSet();
            
            
                // set the CommandTimeout
                adapter.SelectCommand.CommandTimeout = 0;
                adapter.Fill(ds);
            

           //add table names
                ds.Tables[0].TableName = "DTP Counts";
                ds.Tables[2].TableName = "Tier Matches";
                ds.Tables[3].TableName = "Provider details";
                string campgainid = ds.Tables[5].Rows[0].ItemArray[0].ToString();
                string ifcamgainNull = "NoCampaingId";
            string finalcampgainid = campgainid ?? ifcamgainNull;
                
                ExcelFileName = "AH_" + ExcelFileName + finalcampgainid + "_" + "Q" + Quarter + "TMR_ProviderManifest_" + datetime;
          

            OleDbConnection Excel_OLE_Con = new OleDbConnection();
            OleDbCommand Excel_OLE_Cmd = new OleDbCommand();

            //Construct ConnectionString for Excel
            string connstring = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + ExcelFileName
                + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";
            // get the file name for copying it to another destination
            Dts.Variables["User::ExcelFullPath"].Value = ExcelFileName.ToString();
        

            // Get the Column List from Data Table so can create Excel Sheet with Header
            foreach (DataTable table in ds.Tables)
            {
                if (!table.TableName.Contains("Table"))
                {
                    string TableColumns = "";
                    foreach (DataColumn column in table.Columns)
                    {
                        TableColumns += column + "],[";
                    }
                    // Replace most right comma from Columnlist
                    TableColumns = ("[" + TableColumns.Replace(",", " Text,").TrimEnd(','));
                    TableColumns = TableColumns.Remove(TableColumns.Length - 2);


                    //Use OLE DB Connection and Create Excel Sheet
                    Excel_OLE_Con.ConnectionString = connstring;
                    Excel_OLE_Con.Open();
                    Excel_OLE_Cmd.Connection = Excel_OLE_Con;
                    Excel_OLE_Cmd.CommandText = "Create table " + "[" + table.TableName + "] (" + TableColumns + ")";
                    Excel_OLE_Cmd.ExecuteNonQuery();
                    String sqlCommandInsert = "";
                    String sqlCommandValue = "";
                    foreach (DataColumn dataColumn in table.Columns)
                    {
                        sqlCommandValue += dataColumn + "],[";
                    }

                    sqlCommandValue = "[" + sqlCommandValue.TrimEnd(',');
                    sqlCommandValue = sqlCommandValue.Remove(sqlCommandValue.Length - 2);
                   
                    sqlCommandInsert = "INSERT into [" + table.TableName + "](" + sqlCommandValue + ") VALUES(";

                    int columnCount = table.Columns.Count;
                    foreach (DataRow row in table.Rows)
                    {
                        string columnvalues = "";
                        for (int i = 0; i < columnCount; i++)
                        {
                            int index = table.Rows.IndexOf(row);
                            columnvalues += "'" + table.Rows[index].ItemArray[i] + "',";

                        }
                        columnvalues = columnvalues.TrimEnd(',');
                        sqlCommandInsert = sqlCommandInsert.Replace("'", "''");
                        var command = sqlCommandInsert + columnvalues + ")";
                        Excel_OLE_Cmd.CommandText = command;
                        Excel_OLE_Cmd.ExecuteNonQuery();
                    }
                    Excel_OLE_Con.Close();

                }
            }





            // Excel_OLE_Con.Close();

            ds.Tables[3].TableName = "Provider details";

            excelsecondfile = "AH_" +ClientName+ finalcampgainid + "_" + "Q" + Quarter+"TMR" +  "_ProviderDetails_" +"ClientCopy"+ datetime;

            OleDbConnection Excel_OLE_Con2 = new OleDbConnection();
            OleDbCommand Excel_OLE_Cmd2 = new OleDbCommand();

            //Construct ConnectionString for Excel
            string connstring2 = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + excelsecondfile
                + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";
            // foreach (DataTable table in ds.Tables[3].TableName)
            DataTable table2 = ds.Tables[3];

            //if (!table.TableName.Contains("Provider details"))


            string TableColumns2 = "";
            foreach (DataColumn column in table2.Columns)
            {
                TableColumns2 += column + "],[";
            }
            // Replace most right comma from Columnlist
            TableColumns2 = ("[" + TableColumns2.Replace(",", " Text,").TrimEnd(','));
            TableColumns2 = TableColumns2.Remove(TableColumns2.Length - 2);


            //Use OLE DB Connection and Create Excel Sheet
            Excel_OLE_Con2.ConnectionString = connstring2;
            Excel_OLE_Con2.Open();
            Excel_OLE_Cmd2.Connection = Excel_OLE_Con2;
            Excel_OLE_Cmd2.CommandText = "Create table " + "[" + table2.TableName + "] (" + TableColumns2 + ")";
            Excel_OLE_Cmd2.ExecuteNonQuery();
            String sqlCommandInsert2 = "";
            String sqlCommandValue2 = "";
            foreach (DataColumn dataColumn in table2.Columns)
            {
                sqlCommandValue2 += dataColumn + "],[";
            }

            sqlCommandValue2 = "[" + sqlCommandValue2.TrimEnd(',');
            sqlCommandValue2 = sqlCommandValue2.Remove(sqlCommandValue2.Length - 2);
            sqlCommandInsert2 = "INSERT into [" + table2.TableName + "](" + sqlCommandValue2 + ") VALUES(";

            int columnCount2 = table2.Columns.Count;
            foreach (DataRow row in table2.Rows)
            {
                string columnvalues = "";
                for (int i = 0; i < columnCount2; i++)
                {
                    int index = table2.Rows.IndexOf(row);
                    columnvalues += "'" + table2.Rows[index].ItemArray[i] + "',";

                }
                columnvalues = columnvalues.TrimEnd(',');
                var command = sqlCommandInsert2 + columnvalues + ")";
                Excel_OLE_Cmd2.CommandText = command;
                Excel_OLE_Cmd2.ExecuteNonQuery();
            }








            Excel_OLE_Con2.Close();







            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6E4295B-F583-4423-806B-8ADF08BCFE70}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7d4c4dc0d3e445f9b49f402e9187cae9</RootNamespace>
    <AssemblyName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7d4c4dc0d3e445f9b49f402e9187cae9</msb:DisplayName>
		<msb:ProjectId>{9C35871E-808E-4F8A-9344-CB463CC118EB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7d4c4dc0d3e445f9b49f402e9187cae9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Settings.get_Default():ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Sett" +
    "ings")]

namespace ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7d4c4dc0d3e445f9b49f402e9187cae9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7d4c4dc0d3e445f9b49f402e9187cae9")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7d4c4dc0d3e445f9b49f402e9187cae9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7d4c4dc0d3e445f9b49f402e9187cae9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM2nE10AAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAAYkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABBDAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
QwAAAAAAAEgAAAACAAUANCsAACQXAAABAAAAAAAAAFhCAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDCCQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIwAAcG8SAAAKbxMAAAqlJgAAAQsCKBAAAApvEQAACnJDAABw
bxIAAApvEwAACqUmAAABDAIoEAAACm8RAAAKclsAAHBvEgAACm8TAAAKpSYAAAENAigQAAAKbxEA
AApyewAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApynQAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApywQAAcG8SAAAKbxMAAAqlJgAAARMGAigQAAAKbxEAAApy6QAAcG8SAAAKbxMA
AAqlJgAAARMHAigQAAAKbxEAAApyFwEAcG8SAAAKbxMAAApvFAAAChMIKBUAAAoTHxIfcjMBAHAo
FgAAChMJBhMKBhMLclEBAHATDHLHAQBwEw1zFwAAChMOcvUBAHATDxEOcg8CAHARD3JdAgBwKBgA
AApvGQAACnMaAAAKExAREBEObxsAAAoREBENbxwAAAoREBpvHQAAChEQbx4AAApylQIAcB5vHwAA
CgmMJgAAAW8gAAAKERBvHgAACnKrAgBwHm8fAAAKEQaMJgAAAW8gAAAKERBvHgAACnLJAgBwHx9v
HwAAChEFKCEAAAqMFQAAAW8gAAAKERBvHgAACnLjAgBwHm8fAAAKCIwmAAABbyAAAAoREG8eAAAK
cvECAHAfH28fAAAKEQQoIQAACowVAAABbyAAAAoREG8eAAAKcgkDAHAebx8AAAoHjCYAAAFvIAAA
ChEQbx4AAApyHwMAcB5vHwAAChEHjCYAAAFvIAAACnMiAAAKJREQbyMAAApzJAAAChMRJW8lAAAK
Fm8mAAAKERFvJwAACiYREW8oAAAKFm8pAAAKckMDAHBvKgAAChERbygAAAoYbykAAApyWQMAcG8q
AAAKERFvKAAAChlvKQAACnJzAwBwbyoAAAoREW8oAAAKG28pAAAKbysAAAoWbywAAApvLQAAChaa
bxQAAApylQMAcBMSJS0DJhESExMdjScAAAElFnKvAwBwoiUXEQqiJRgRE6IlGXK3AwBwoiUaEQii
JRtyvQMAcKIlHBEJoiguAAAKEwpzLwAAChMUczAAAAoTFXLpAwBwEQwRCnJHBABwKDEAAAoTFgIo
EAAACm8RAAAKcqUEAHBvEgAAChEKbxQAAApvMgAAChERbygAAApvMwAAChMgONQCAAARIG80AAAK
dBQAAAETIREhbzUAAApyzQQAcG82AAAKOrACAABy2QQAcBMiESFvNwAACm8zAAAKEyYrHhEmbzQA
AAp0FwAAARMnESIRJ3LbBABwKDgAAAoTIhEmbzkAAAot2d4VESZ1GAAAARMoESgsBxEobzoAAArc
cuMEAHARInLnBABwcusEAHBvOwAACheNNQAAASUWHyydbzwAAAooPQAAChMiESIlbz4AAAoYWW8/
AAAKEyIRFBEWbxkAAAoRFG9AAAAKERURFG9BAAAKERUbjScAAAElFnL5BABwoiUXESFvNQAACqIl
GHIXBQBwoiUZESKiJRpyHwUAcKIoLgAACm8cAAAKERVvQgAACiZy2QQAcBMjctkEAHATJBEhbzcA
AApvMwAAChMmKx4RJm80AAAKdBcAAAETKREkESly2wQAcCg4AAAKEyQRJm85AAAKLdneFREmdRgA
AAETKBEoLAcRKG86AAAK3HLjBABwESQXjTUAAAElFh8snW88AAAKKD0AAAoTJBEkJW8+AAAKGFlv
PwAAChMkG40nAAABJRZyIwUAcKIlFxEhbzUAAAqiJRhyPwUAcKIlGREkoiUackUFAHCiKC4AAAoT
IxEhbzcAAApvQwAAChMlESFvKwAACm8zAAAKEyY4uQAAABEmbzQAAAp0GQAAARMqctkEAHATKxYT
LStRESFvKwAAChEqb0QAAAoTLhqNHAAAASUWESuiJRdyWQUAcKIlGBEhbysAAAoRLm8sAAAKby0A
AAoRLZqiJRlyXQUAcKIoRQAAChMrES0XWBMtES0RJTKpESsXjTUAAAElFh8snW88AAAKEysRI3JZ
BQBwcmMFAHBvOwAAChMjESMRK3IfBQBwKBgAAAoTLBEVESxvHAAAChEVb0IAAAomESZvOQAACjo7
////3hURJnUYAAABEygRKCwHEShvOgAACtwRFG9GAAAKESBvOQAACjog/f//3hURIHUYAAABEygR
KCwHEShvOgAACtwREW8oAAAKGW8pAAAKcnMDAHBvKgAACh2NJwAAASUWcq8DAHCiJRcGoiUYEROi
JRlytwMAcKIlGhEIoiUbcmkFAHCiJRwRCaIoLgAAChMLcy8AAAoTF3MwAAAKExhy6QMAcBEMEQty
RwQAcCgxAAAKExkREW8oAAAKGW8pAAAKExpy2QQAcBMbERpvNwAACm8zAAAKEyArHhEgbzQAAAp0
FwAAARMvERsRL3LbBABwKDgAAAoTGxEgbzkAAAot2d4VESB1GAAAARMoESgsBxEobzoAAArccuME
AHARG3LnBABwcusEAHBvOwAACheNNQAAASUWHyydbzwAAAooPQAAChMbERslbz4AAAoYWW8/AAAK
ExsRFxEZbxkAAAoRF29AAAAKERgRF29BAAAKERgbjScAAAElFnL5BABwoiUXERpvNQAACqIlGHIX
BQBwoiUZERuiJRpyHwUAcKIoLgAACm8cAAAKERhvQgAACiZy2QQAcBMcctkEAHATHREabzcAAApv
MwAAChMgKx4RIG80AAAKdBcAAAETMBEdETBy2wQAcCg4AAAKEx0RIG85AAAKLdneFREgdRgAAAET
KBEoLAcRKG86AAAK3HLjBABwER0XjTUAAAElFh8snW88AAAKKD0AAAoTHREdJW8+AAAKGFlvPwAA
ChMdG40nAAABJRZyIwUAcKIlFxEabzUAAAqiJRhyPwUAcKIlGREdoiUackUFAHCiKC4AAAoTHBEa
bzcAAApvQwAAChMeERpvKwAACm8zAAAKEyA4pgAAABEgbzQAAAp0GQAAARMxctkEAHATMhYTNCtR
ERpvKwAAChExb0QAAAoTNRqNHAAAASUWETKiJRdyWQUAcKIlGBEabysAAAoRNW8sAAAKby0AAAoR
NJqiJRlyXQUAcKIoRQAAChMyETQXWBM0ETQRHjKpETIXjTUAAAElFh8snW88AAAKEzIRHBEych8F
AHAoGAAAChMzERgRM28cAAAKERhvQgAACiYRIG85AAAKOk7////eFREgdRgAAAETKBEoLAcRKG86
AAAK3BEXb0YAAAoCKBAAAAoWb0cAAAoqAABBrAAAAgAAANkDAAArAAAABAQAABUAAAAAAAAAAgAA
AM0EAAArAAAA+AQAABUAAAAAAAAAAgAAAIwFAADMAAAAWAYAABUAAAAAAAAAAgAAAJsDAADnAgAA
ggYAABUAAAAAAAAAAgAAAC0HAAArAAAAWAcAABUAAAAAAAAAAgAAACEIAAArAAAATAgAABUAAAAA
AAAAAgAAAOAIAAC5AAAAmQkAABUAAAAAAAAAHgIoSAAACioeAihJAAAKKq5+AQAABC0ecqcFAHDQ
AwAAAihKAAAKb0sAAApzTAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKE0A
AAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACgBQAA
I34AAAwGAAB8CAAAI1N0cmluZ3MAAAAAiA4AABwGAAAjVVMApBQAABAAAAAjR1VJRAAAALQUAABw
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAOAAAAAUAAAAGAAAACQAAAAEA
AABNAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAxQQBAAAAAAAG
ABgDgwYGAKcDgwYGAGQCcAYPAPcGAAAGAJECWAUGAPsCWAUGANwCWAUGAI4DWAUGADgDWAUGAFED
WAUGAKgCWAUGAMMCEgQKAGwDdAQKALQBdAQOANsF5gcOAJsA5gcOAMMHWwAOAMsFZwAOAI4AZwAO
AOIAWwAGAEEB+wQGAEkGbAcOACMFWwAGAPUA+wQOAEYIWwAGAAIF+wQGAEcCcAYGALwH+wQGABEG
owYGAPwFQwUSABcCrwQSAHgCrwQSAOsBLgUGACwCgwYKAJ0EdAQWAEQHSgEWAOwASgEGAAEA+wQG
AEME+wQOAM4F6QUOAJEA6QUOAHgBWwAOAJMF5gcOAC0G5gcOAGoBWwAOACEG6QUOADoG5gcOAD0G
6QUOAGoFWwAOAKoFWwAOANABWwAOAH4FWwAGAAgG+wQGAH8B+wQGAAEB+wQGAGAIWAUAAAAAKwAA
AAAAAQABAAEAEAAYBeYDOQABAAEAAAAQAKoGBgdxAAEAAwAAARAATgcGB4UAAwAHAAMBAACeBwAA
aQAEAAoAEQAHBXIBEQCkAXYBEQDSAHoBBgZTAH4BVoCOB4EBVoCEAYEBUCAAAAAAhgAeBQYAAQDM
KgAAAACGGGMGBgABANQqAAAAAIMYYwYGAAEA3CoAAAAAkwgNBoUBAQAIKwAAAACTCIwBigEBAA8r
AAAAAJMImAGPAQEAFysAAAAAlgjLB5UBAgAeKwAAAACGGGMGBgACACYrAAAAAJEYaQaaAQIAAAAB
ANkDCQBjBgEAEQBjBgYAGQBjBgoAKQBjBhAAMQBjBhAAOQBjBhAAQQBjBhAASQBjBhAAUQBjBhAA
WQBjBhAAYQBjBhAAaQBjBgYA2QBjBgYAAQFjBhUAEQFjBgYAcQCWB2cAGQFAB20AIQHyBHMAKQHF
A3oA4QBBBH4AqQA+CIIAqQBBBIcAeQBjBgYAOQG1B4wAQQEsBBAAgQBjBgYAgQC8BZMASQEuCBAA
SQF0AZkAgQB/B6AAWQGCAKYAcQHPA7AAqQARArUAeQFjBgYAeQG4ALsAiQBjBgYAeQGmAMEASQES
CAEAgQHtBMYAiQA1B8wAiQHyBNIAoQAzARAAoQCsB9gAkQHyBN4AyQBOCOQAOQG1B+kAkQBjBgYA
mQBjBgYAOQG1B+8AKQHPA7AAmQFVBvcAsQD8B3oAoQAlAX4AOQFXB/wAoQBgBwEBOQG1BwcBsQAl
CA4BwQAJAgYAOQHKABIBOQGGABgBOQG1Bx4BOQFKBCQBOQHfAygBQQETBQYAmQC8BS0BSQFpCCQB
mQEICCQBkQEKBDMBOQG1BzkBQQEDAgYAGQHXBwEAcQBjBgYA4QBjBgYAsQETAT8BsQFcCEgB6QBj
Bk4BCQFjBgYACAAUAGgBCAAYAG0BKQBzANUBLgALAK0BLgATALYBLgAbANUBLgAjAN4BLgArAAcC
LgAzAAcCLgA7AAcCLgBDAN4BLgBLAA0CLgBTAAcCLgBbACQCQwBjAG0BSQBzANUBYQB7AG0BYwBr
AG0BGwADAAEABAADAAAAEQaeAQAArAGjAQAAzweoAQIABAADAAIABQAFAAEABgAFAAIABwAHAASA
AAABAAAAzBv+VQAAAAAAAAcAAAAEAAAAAAAAAAAAAABWAXkAAAAAAA4AAAAAAAAAAAAAAF8BVQQA
AAAABAAAAAAAAAAAAAAAVgFbAAAAAAAEAAAAAAAAAAAAAABWAfsEAAAAAA4AAAAAAAAAAAAAAF8B
NAAAAAAAAAAAAAEAAAC0BgAABQACAAAAAAAASW50MzIAU1RfN2Q0YzRkYzBkM2U0NDVmOWI0OWY0
MDJlOTE4N2NhZTkAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVl
X18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAQWRkAFRyaW1FbmQAT2xl
RGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0X1NlbGVjdENvbW1hbmQAc2V0X1NlbGVjdENvbW1hbmQA
UmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9UYWJsZU5hbWUAc2V0X1RhYmxl
TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFNxbERiVHlwZQBz
ZXRfQ29tbWFuZFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UAUGFyc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAUmVtb3ZlAFNU
XzNmYTA0YmM0Njc0OTQ5ZDlhNmQ0NWUxZmQ4MWY4YzZmAEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBzZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBnZXRfTGVuZ3RoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF83ZDRj
NGRjMGQzZTQ0NWY5YjQ5ZjQwMmU5MTg3Y2FlOS5kbGwARmlsbABnZXRfSXRlbQBTeXN0ZW0ARW51
bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFibGVDb2xs
ZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJv
d0NvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24AT2xlRGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBE
YlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIAU3FsRGF0YUFkYXB0ZXIASUVudW1lcmF0b3IAR2V0RW51
bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83ZDRjNGRjMGQzZTQ0NWY5YjQ5ZjQw
MmU5MTg3Y2FlOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfN2Q0YzRkYzBkM2U0NDVmOWI0OWY0MDJlOTE4N2NhZTkuUHJvcGVydGllcwBnZXRfVGFibGVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAQ29udGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxl
Y3Rpb25zAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9S
b3dzAENvbmNhdABPYmplY3QARGF0YVNldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0
ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AHNldF9Db21tYW5kVGltZW91
dABNb3ZlTmV4dABzZXRfQ29tbWFuZFRleHQAZ2V0X05vdwBEYXRhUm93AGdldF9JdGVtQXJyYXkA
Z2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAAAAAAIVUAcwBlAHIAOgA6AGMAbABpAGUAbgB0
AG4AYQBtAGUAAB9VAHMAZQByADoAOgBvAHYAZQByAFcAcgBpAHQAZQAAF1UAcwBlAHIAOgA6AG8A
WQBlAGEAcgAAH1UAcwBlAHIAOgA6AHAAQwBsAGkAZQBuAHQAaQBkAAAhVQBzAGUAcgA6ADoAUABE
AFQAUABDAHUAdABvAGYAZgAAI1UAcwBlAHIAOgA6AHAATABlAHQAdABlAHIARABhAHQAZQAAJ1UA
cwBlAHIAOgA6AHAAUABvAHAAdQBsAGEAdABpAG8AbgBJAEQAAC1VAHMAZQByADoAOgByAGUAYwBy
AGUAYQB0AGUAcwB5AG4AbwBuAHkAbQBzAAAbVQBzAGUAcgA6ADoAUQB1AGEAcgB0AGUAcgAAHXkA
eQB5AHkATQBNAGQAZABIAEgAbQBtAHMAcwAAdVoAOgBcAEUAeAB0AGUAcgBuAGEAbABcAEMAbABp
AG4AaQBjAGEAbABcAFQATQBSACAAQwBhAG0AcABhAGkAZwBuAHMAXABUAE0AUgAgAFAAcgBvAHYA
aQBkAGUAcgAgAE0AYQBuAGkAZgBlAHMAdABzAFwAAC10AGUAbQBwAC4AQwByAGUAYQB0AGUAVABN
AFIAQwBhAG0AcABhAGkAZwBuAAAZQwBSAEUARgBfAEMARABFAF8AVABNAFIAAE1EAGEAdABhACAA
UwBvAHUAcgBjAGUAIAA9AHMAcQBsAG8AcABzADsAIABJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBs
AG8AZwAgAD0AADc7ACAASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AHQA
cgB1AGUAOwAAFUAAcABDAGwAaQBlAG4AdABJAEQAAB1AAHAAUABvAHAAdQBsAGEAdABpAG8AbgBp
AGQAABlAAHAATABlAHQAdABlAHIARABhAHQAZQAADUAAcABZAGUAYQByAAAXQABwAEQAVABQAEMA
dQB0AG8AZgBmAAAVQABvAHYAZQByAFcAcgBpAHQAZQAAI0AAcgBlAGMAcgBlAGEAdABlAFMAeQBu
AG8AbgB5AG0AcwAAFUQAVABQACAAQwBvAHUAbgB0AHMAABlUAGkAZQByACAATQBhAHQAYwBoAGUA
cwAAIVAAcgBvAHYAaQBkAGUAcgAgAGQAZQB0AGEAaQBsAHMAABlOAG8AQwBhAG0AcABhAGkAbgBn
AEkAZAAAB0EASABfAAAFXwBRAAArVABNAFIAXwBQAHIAbwB2AGkAZABlAHIATQBhAG4AaQBmAGUA
cwB0AF8AAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBM
AEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9AABdOwBFAHgAdABlAG4A
ZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBlAGwAIAAxADIALgAwACAAWABt
AGwAOwBIAEQAUgA9AFkARQBTADsAIgAAJ1UAcwBlAHIAOgA6AEUAeABjAGUAbABGAHUAbABsAFAA
YQB0AGgAAAtUAGEAYgBsAGUAAAEAB10ALABbAAADWwAAAywAAA0gAFQAZQB4AHQALAAAHUMAcgBl
AGEAdABlACAAdABhAGIAbABlACAAWwAAB10AIAAoAAADKQAAG0kATgBTAEUAUgBUACAAaQBuAHQA
bwAgAFsAAAVdACgAABMpACAAVgBBAEwAVQBFAFMAKAAAAycAAQUnACwAAQUnACcAAT1UAE0AUgBf
AFAAcgBvAHYAaQBkAGUAcgBEAGUAdABhAGkAbABzAF8AQwBsAGkAZQBuAHQAQwBvAHAAeQAAcVMA
VABfADcAZAA0AGMANABkAGMAMABkADMAZQA0ADQANQBmADkAYgA0ADkAZgA0ADAAMgBlADkAMQA4
ADcAYwBhAGUAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
sBFh++nlHESzMKt3Kyw32gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERfUsHNg4ICAgODggIDg4O
Dg4OEj0OEkESRQ4OEkkSTQ4SSRJNDhJRDg4OCBFVElkSUQ4ODggSWRJdEmESXRJlDg4ICBJdEl0S
ZQ4OCAgFIAASgI0FIAASgJEGIAESgJUcAyAAHAMgAA4EAAARVQQgAQ4OBgADDg4ODgUgAQESPQYg
AQERgKkFIAASgK0JIAISgLEOEYC1BCABARwFAAERVQ4FIAEBEkEEIAASQQUgAQgSRQUgABKAxQUg
ARJRCAUgABKAyQUgARJlCAQgAB0cBQABDh0OBwAEDg4ODg4EIAASWQQgAQIOBSAAEoDRBgADDhwc
HAMgAAIFIAIODg4FIAEOHQMFAAIODg4DIAAIBCABDggFIAEBEkkFIAEIEmUFAAEOHRwIAAESgNkR
gN0FIAASgOEHIAIBDhKA4Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJ1AwYSeQMGEhAC
BggDBhEUBAAAEnUEAAASeQUAAQESeQQAABIQAwAAAQQIABJ1BAgAEnkECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfN2Q0YzRkYzBkM2U0
NDVmOWI0OWY0MDJlOTE4N2NhZTkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjUAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4QwAAAAAAAAAAAABSQwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAREMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAP5VzBsAAAEA/lXMGz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
NwBkADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgANwBj
AGEAZQA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMQAxADYA
LgAyADIAMAAxADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANwBk
ADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgANwBjAGEA
ZQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwA3AGQANABjADQAZABjADAAZAAzAGUANAA0ADUAZgA5AGIANAA5AGYANAAwADIAZQA5ADEA
OAA3AGMAYQBlADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8ANwBkADQAYwA0AGQAYwAwAGQAMwBlADQANAA1AGYAOQBiADQAOQBmADQAMAAyAGUAOQAxADgA
NwBjAGEAZQA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3
ADEAMQA2AC4AMgAyADAAMQA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADEAMQA2AC4AMgAyADAAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAGQzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7216F3B3-32F2-4E2C-A967-CE04F926FD17}"
          DTS:From="Package\Sequence Container\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{9C8BD9E9-312F-471B-B234-F4D04A743B32}"
          DTS:From="Package\Sequence Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Copy Excel File" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E93D7131-ADC0-4C8A-B46B-EADA0EA8C60E}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Send_Mail_Successful_job" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{694B96CE-CF37-4C83-BC3F-87E9EB42DD17}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Send_Mail_Failed_job"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{D711D4A2-BD64-4830-9462-A66E945F10B0}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{A60EEF93-C012-4A7C-A6FA-93F160B2D2B1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{0A1446D7-6AE3-4568-9A09-ACEBC6112C24}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="successfulresult">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="181,42"
          Id="Package\Send_Mail_Failed_job"
          TopLeft="257,392" />
        <NodeLayout
          Size="202,42"
          Id="Package\Send_Mail_Successful_job"
          TopLeft="439,398" />
        <NodeLayout
          Size="149,42"
          Id="Package\Sequence Container\Copy Excel File"
          TopLeft="22.5,223" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\Execute SQL Task"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Sequence Container\Script Task"
          TopLeft="27.5,106.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="90,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="95,148.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74.5"
              Start="0,0"
              End="0,67">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,320"
          Size="205,363"
          Id="Package\Sequence Container"
          TopLeft="414.5,4.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="549.833333333333,367.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.83333333333326,30.5"
              Start="0,0"
              End="-9.83333333333326,23">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.34172313649565" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.34172313649565"
                    Point2="0,12.3417231364957"
                    Point3="-4,12.3417231364957" />
                  <mssgle:LineSegment
                    End="-5.83333333333326,12.3417231364957" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.83333333333326,12.3417231364957"
                    Point2="-9.83333333333326,12.3417231364957"
                    Point3="-9.83333333333326,16.3417231364957" />
                  <mssgle:LineSegment
                    End="-9.83333333333326,23" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="484.166666666667,367.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-136.666666666667,24.5"
              Start="0,0"
              End="-136.666666666667,17">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,5.91384317521781" />
                  <mssgle:CubicBezierSegment
                    Point1="0,5.91384317521781"
                    Point2="0,9.91384317521781"
                    Point3="-4,9.91384317521781" />
                  <mssgle:LineSegment
                    End="-132.666666666667,9.91384317521781" />
                  <mssgle:CubicBezierSegment
                    Point1="-132.666666666667,9.91384317521781"
                    Point2="-136.666666666667,9.91384317521781"
                    Point3="-136.666666666667,13.9138431752178" />
                  <mssgle:LineSegment
                    End="-136.666666666667,17" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-83.5746809895835,14.9138431752178,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="{02EF9035-454F-4BA7-96C3-18F829909453}"
          TopLeft="244,83" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Execute SQL Task.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{A0984CE8-F8E3-45A3-8DB6-8C5A2CA8EC15}"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>