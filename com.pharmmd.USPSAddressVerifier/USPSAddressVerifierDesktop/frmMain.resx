<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>740, 17</value>
  </metadata>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>585, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        N5KW2gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>This application can be used to toss a bunch of addresses against the USPS Web API for address verification and cleanup. It produces a text output file with return values and verifications.

Also, DB Looper file types will be saved in the "C:\Usps" folder with date stamped attributes
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>214, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>418, 17</value>
  </metadata>
</root>